<apex:page controller="ApplicationRequirement" extensions="ApplicationProgressBar" action="{!init}" showHeader="false" standardStylesheets="false" docType="html-5.0" >
   <script>
       
       
       //map holds possible special characters returned from function - Luke
        var entityMap = {
             "&amp;" : "&",
             "&lt;" : "<",
             "&gt;" : ">" ,
             "&quot;" : '"' ,
             "&#39;" : "'" ,
             "&#x2F;" :  "/",
             "&#x60;" : "`",
             "&#x3D;" :  "="
        };
        
        //loops through map of entities if any of the special characters are found convert them - Luke
        function unescapeHtml (string) {
            
            for(var key in entityMap){
                if(string.indexOf(key) > -1){
                    string = string.replace(key, entityMap[key]);
                }
            }
            return string;
        }

        function lookupSearchJS(sObj,sObjFilter,sObjNameField,searchTerm,callback){
            console.log("in application requirement vfp");
            console.log(sObj);
            console.log(searchTerm);
            Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ApplicationRequirement.lookupSearch}',
                sObj, sObjFilter,sObjNameField,searchTerm,
                function(result, event){
                    if (event.status) {
                        console.log(result);
                        //added loop to fix special characters, unable to fix server side and selectOptions does not have a attribute to set escape false - Luke
                        for(var i = 0; i < result.length; i++){
                            if(result[i] != null && result[i][sObjNameField] != null){
                                result[i][sObjNameField] = unescapeHtml(result[i][sObjNameField]);
                            }
                        }
                        callback(result)
                    } else if (event.type === 'exception') {
                    } else {
                    }
                },
                {escape: true}
            );
        }

        function scrollToTop() {
            window.scrollTo(0,0);
        }
    </script>
    <style>
       /* hide nav for mobile - Luke Vang */
        @media only screen and (min-width: 767px){
            #btn-lightning-mobile{
                display:none;
            }
        }

        /* hide nav for desktop - Luke Vang */
            @media only screen and (max-width: 767px){
            #btn-lightning-desktop{
                display:none;
            }
        }

    </style>
    <c:ApplicationHead />
    <c:ApplicationBody title="{!if(isInvalid,'An Error has occured',title)}" subtitle="{!if(isInvalid,'An error has occured and you do not have access to this page.','')}" appControl="{!appControl}">
       <c:ApplicationForm section="{!section}" rendered="{!!showSuccess && !isInvalid}" appControl="{!appControl}"
        requirementId="{!requirementId}"
        reqs="{!reqs}"
        progress="{!progress}"
        displayProgressBar="false" hidePaging="true"> 
            <div class="row" >
                <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 col-xs-12" >
                    <apex:actionFunction name="saveWithDocs" action="{!submitReference}" reRender="formPageMessages" oncomplete="appHideLoadingSpinner();scrollToTop();" focus="theTop">
                        <apex:param name="p2" value="" assignTo="{!redirectPage}"/>
                    </apex:actionFunction>
                    <div class="row" >
                        <style>
                        	@media only screen and (max-width: 400px) {
                            	.btn-lg {
                            		padding: 10px;
                            	}
                            }
                        </style>
                        <!-- nav layout for desktop - Luke -->
                        <div id="btn-lightning-desktop">
                            <div class="col-xs-6 col-md-4 col-md-offset-2">
                                <center>
                                     <!-- added 1px margin-left styling to back to back to checklist button to fix it's positioning  Luke Vang -->
                                    <a class="btn btn-lg btn-lightning" style="color:#{!appControl.Button_Text_Color__c};background-color:#{!appControl.Button_Color__c}; align-content: center; width:100%; margin: 10px;" onclick="saveWithDocs('');appShowLoadingSpinner();return false;">Save</a>
                                </center>
                            </div>
                        </div>
                        <!-- nav layout for mobile - Luke Vang -->
                        <div id="btn-lightning-mobile">
                                <div class="col-xs-12 col-md-4">
                                        <center>
                                            <!-- added 1px margin-left styling to back to back to checklist button to fix it's positioning  Luke Vang -->
                                            <a class="btn btn-lg btn-lightning" style="color:#{!appControl.Button_Text_Color__c};background-color:#{!appControl.Button_Color__c}; align-content: center; width:100%; margin: 10px;" onclick="saveWithDocs('');appShowLoadingSpinner();return false;">Save</a>
                                        </center>
                                    </div>
                        </div>
                    </div>
                </div>
            </div>
        </c:ApplicationForm>

    </c:ApplicationBody>
</apex:page>